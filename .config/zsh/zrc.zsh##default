#!/usr/bin/zsh

if [ -f $HOME/.config/zsh/zenv.zsh ]; then
  source $HOME/.config/zsh/zenv.zsh
fi

zi_home="${HOME}/.zi"

if [[ ! -d "$zi_home"/bin ]]; then
  typeset -Ag ZI
  export ZI[BIN_DIR]="${XDG_CONFIG_HOME:-${HOME}/.config}/zi/bin"
  source "${ZI[BIN_DIR]}/zi.zsh"
  autoload -Uz _zi
  (( ${+_comps} )) && _comps[zi]=_zi
else
  typeset -Ag ZI
  export ZI[BIN_DIR]="$zi_home"
  source "${ZI[BIN_DIR]}/bin/zi.zsh"
  autoload -Uz _zi
  (( ${+_comps} )) && _comps[zi]=_zi
fi


# Git
zi snippet OMZL::git.zsh
zi snippet OMZP::git
zi cdclear -q

# Git [Addons]
zi snippet OMZP::git-extras
# zi snippet OMZP::gh
zi snippet OMZP::git-lfs

if [[ $OSVER == *"SUSE"* ]]; then
  zi snippet OMZP::suse
fi

# GPG/SSH/Security
zi snippet OMZP::safe-paste
zi snippet OMZP::firewalld

# Python
zi snippet OMZP::pip
# zi snippet OMZP::pipenv
zi snippet OMZP::python
zi snippet OMZP::pylint

# Sysadmin
zi snippet OMZP::sudo
zi snippet OMZP::cp
zi snippet OMZP::systemd
zi snippet OMZP::systemadmin
zi snippet OMZP::tmux

# Other
zi snippet OMZP::urltools
zi snippet OMZP::common-aliases

zi ice as"completion"
zi snippet OMZP::ag/_ag
zi snippet OMZP::docker

zi snippet OMZP::colored-man-pages

# OOB (Out-of-band)
zi load buonomo/yarn-completion
zi load chrissicool/zsh-256color
zi load zsh-users/zsh-completions
zi load lukechilds/zsh-better-npm-completion
# zi load lukechilds/zsh-nvm
zi load zsh-users/zsh-syntax-highlighting
zi load z-shell/F-Sy-H
zi load z-shell/H-S-MW
zi load spaceship-prompt/spaceship-prompt

# Completions
if command -v restic > /dev/null; then 
  zi ice lucid wait as'completion' blockf has'restic'
  zi snippet "$HOME/.local/share/completions/_restic"
fi

if command -v gh > /dev/null; then
  zi ice lucid wait as'completion' blockf has'gh'
  zi snippet "$HOME/.local/share/completions/_gh"
fi

if command -v pipenv > /dev/null; then
  zi ice lucid wait as'completion' blocf has'pipenv'
  _PIPENV_COMPLETE=zsh_source pipenv > "$HOME/.local/share/completions/_pipenv"
  zi snippet "$HOME/.local/share/completions/_pipenv"
fi

setopt promptsubst

zi snippet OMZL::prompt_info_functions.zsh
zi snippet OMZL::theme-and-appearance.zsh

if [ -f $HOME/.config/zsh/zaliases.zsh ]; then
  source $HOME/.config/zsh/zaliases.zsh
fi

autoload -Uz compinit && compinit

# Zstyle
zstyle ':completion:*:matches' group 'yes'
zstyle ':completion:*:options' description 'yes'
zstyle ':completion:*:options' auto-description '%d'
zstyle ':completion:*:corrections' format ' %F{green}-- %d (errors: %e) --%f'
zstyle ':completion:*:descriptions' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*:messages' format ' %F{purple} -- %d --%f'
zstyle ':completion:*:warnings' format ' %F{red}-- no matches found --%f'
zstyle ':completion:*:default' list-prompt '%S%M matches%s'
zstyle ':completion:*' format ' %F{yellow}-- %d --%f'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' verbose yes
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*:functions' ignored-patterns '(_*|pre(cmd|exec))'
zstyle ':completion:*' use-cache true
zstyle ':completion:*' rehash true
zstyle ':completion::complete:*' gain-privileges 1
setopt COMPLETE_ALIASES
zstyle ':completion:*' menu select
zstyle :plugin:history-search-multi-word reset-prompt-protect 1

# Setopt
setopt pushd_ignore_dups
setopt auto_pushd
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_space
setopt hist_reduce_blanks

[[ -d /opt/asdf-vm ]] && . /opt/asdf-vm/asdf.sh
zi light-mode for \
  z-shell/z-a-meta-plugins \
  @annexes @zunit

if [[ -d $HOME/.pyenv ]]; then
  export PYENV_ROOT="$HOME/.pyenv"
  command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi

if [ $(ps ax | grep "[s]sh-agent" | wc -l) -eq 0 ] ; then
    eval $(ssh-agent -s) > /dev/null
    if [ "$(ssh-add -l)" = "The agent has no identities." ] ; then
        # Auto-add ssh keys to your ssh agent
        # Example:
        ssh-add ~/.ssh/id_ed25519_servers > /dev/null 2>&1
        ssh-add ~/.ssh/id_ed25519_gitit > /dev/null 2>&1
    fi
fi


# export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"
